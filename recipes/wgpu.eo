VERSION := "master"
TAG := "v0.12.0.1"

# Build from source
preinstall-dir :=
    then
        build-path := (tempdir)
        rustup-dir := (tempdir)
        build-shell :=
            shell build-path
        build-shell "git clone https://github.com/gfx-rs/wgpu-native/ --recurse-submodules ."
        build-shell "git checkout {VERSION}"
        build-shell "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME={rustup-dir} CARGO_HOME={rustup-dir} sh -s -- -y --no-modify-path"
        build-shell "RUSTUP_HOME={rustup-dir} CARGO_HOME={rustup-dir} make package -j {cpu-core-count}"
        commonpath (extract "{build-path}/dist/wgpu--release.zip")

# Pre-built binaries
release-archive := (download "https://github.com/gfx-rs/wgpu-native/releases/download/{TAG}/wgpu-linux-x86_64-release.zip")
release-dir := (commonpath (extract release-archive))

bindings :=
    download "https://raw.githubusercontent.com/ScopesCommunity/eo-packages/main/bindings/wgpu.sc"

package wgpu-native
    platform linux unknown
    version VERSION
    alias "/include/webgpu.h" "{preinstall-dir}/webgpu.h"
    alias "/include/wgpu.h" "{preinstall-dir}/wgpu.h"
    alias "/lib/libwgpu.so" "{preinstall-dir}/libwgpu.so"
    alias "/lib/scopes/packages/wgpu.sc" bindings

package wgpu-native-release
    platform linux
    version TAG
    alias "/include/webgpu.h" "{release-dir}/webgpu.h"
    alias "/include/wgpu.h" "{release-dir}/wgpu.h"
    alias "/lib/libwgpu.so" "{release-dir}/libwgpu.so"
    alias "/lib/scopes/packages/wgpu.sc" bindings
